blueprint:
  name: Smart Thermostat
  description: A blueprint for managing heater
  domain: automation
  input:
    weather:
      name: Weather
      description: The weather application which you currently use
      selector:
        entity:
          domain: weather
    temp_sensor:
      name: Temperature Sensor
      description: Sensor(s) for measuring the house temperature
      selector:
        entity:
          domain: sensor
          device_class: temperature
    window_sensor:
      name: Window sensor
      description: Sensor checking if the window is open
      selector:
        entity:
          domain: group
    daytime:
      name: Daytime
      description: Input the starting time for the day
      selector:
        time:
    daytime_temp:
      name: Daytime Temperature
      description: Input desired temperature for the day (Default = 23°C)
      default: 23
      selector:
        number:
          step: 0.5
          min: 15
          max: 27
          unit_of_measurement: "°C"
    nighttime:
      name: Nighttime
      description: Input the starting time for the night
      selector:
        time:
    nighttime_temp:
      name: Nighttime Temperature
      description: Input desired temperature for the night (Default = 24 °C)
      default: 24
      selector:
        number:
          step: 0.5
          min: 15
          max: 27
          unit_of_measurement: "°C"
    thermostat:
      name: Thermostat
      description: The heating device
      selector:
        entity:
          domain: climate
    wintermode:
      name: Wintermode
      description: The ouside temperature needs to be below this to activate heating (Default = 10°C)
      default: 10
      selector:
        number:
          step: 0.5
          min: 0
          max: 15
          unit_of_measurement: "°C"
    wintermode_delay:
      name: Wintermode Delay
      description: Time the outside temperature neeeds to stay above the wintermode temperature to turn the heating off (Default = 30 min)
      default: 30
      selector:
        number:
          mode: box
          min: 1
          max: 86400
          unit_of_measurement: minutes

mode: queued
max_exceeded: silent
max: 10

variables:
  heater: !input thermostat
  temp_sensor: !input temp_sensor
  currenttempoffset: >-
    {{ ((states(temp_sensor)|float - state_attr(thermostat, 'current_temperature')|float) * 100) }}
  offset_val:  >-
    {%- if (currenttempoffset != 0) %}
      {{ currenttempoffset + (state_attr(thermostat, 'offset')|int) }}
    {% elif (currenttempoffset == 0) %}
      {{ state_attr(thermostat, 'offset')|int }}
    {% endif %}

trigger:
  - platform: state
    entity_id: !input thermostat
    from: 'off'
    to: 'heat'
  - platform: template
    value_template: "{{ state_attr(thermostat, 'current_temperature') }}"
  - platform: state
    entity_id: 
      - !input temp_sensor
      - !input window_sensor
  - platform: numeric_state
    entity_id: !input weather
    attribute: temperature
    below: !input wintermode
    for: !input wintermode_delay
  - platform: numeric_state
    entity_id: !input weather
    attribute: temperature
    above: !input wintermode
    for: !input wintermode_delay
  - platform: time
    at: !input daytime
  - platform: time
    at: !input nighttime

action:
  - choose:
    - condition: template
      value_template: >
        {% set t = strptime(states('sensor.time'), "%H:%M:%S") %}
        {% set day = strptime(state_attr(daytime, 'time'), "%H:%M:%S") %}
        {% set night = strptime(state_attr(nighttime, 'time'), "%H:%M:%S") %}
        {{ day <= t < night}}
  - choose:
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: !input window_sensor
                state: 'off'
              - condition: numeric_state
                entity_id: !input weather
                attribute: temperature
                below: !input wintermode
        sequence:
          - service: !input thermostat
              target:
                entity_id: zone.home
              data:
                temperature: !input daytime_temp
          - service: deconz.configure
            data:
              entity: !input thermostat
              field: /config
              data:
                offset: 0
          - service: deconz.configure
            data:
              entity: !input thermostat
              field: /config
              data:
                offset: >-
                  {{ offset_val }}
          - service: climate.set_hvac_mode
            data:
              hvac_mode: 'heat'
            entity_id: !input thermostat
          - delay: 00:00:05
      - conditions:
          - condition: or
            conditions:
              - condition: state
                entity_id: !input window_sensor
                state: 'on'
              - condition: numeric_state
                entity_id: !input weather
                attribute: temperature
                above: !input wintermode
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: 'off'
            entity_id: !input thermostat
    default:
      - choose:
      - conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: !input window_sensor
                state: 'off'
              - condition: numeric_state
                entity_id: !input weather
                attribute: temperature
                below: !input wintermode
        sequence:
          - service: !input thermostat
              target:
                entity_id: zone.home
              data:
                temperature: !input nighttime_temp
          - service: deconz.configure
            data:
              entity: !input thermostat
              field: /config
              data:
                offset: 0
          - service: deconz.configure
            data:
              entity: !input thermostat
              field: /config
              data:
                offset: >-
                  {{ offset_val }}
          - service: climate.set_hvac_mode
            data:
              hvac_mode: 'heat'
            entity_id: !input thermostat
          - delay: 00:00:05
      - conditions:
          - condition: or
            conditions:
              - condition: state
                entity_id: !input window_sensor
                state: 'on'
              - condition: numeric_state
                entity_id: !input weather
                attribute: temperature
                above: !input wintermode
        sequence:
          - service: climate.set_hvac_mode
            data:
              hvac_mode: 'off'
            entity_id: !input thermostat
    
